require('dotenv').config(); // ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const PORT = 3000;

// ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุจูุงูุงุช MongoDB Atlas ุจุงุณุชุฎุฏุงู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช'))
  .catch(err => console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', err));

// ุฅูุดุงุก ูููุฐุฌ (Schema) ููุฑุณุงุฆู
const messageSchema = new mongoose.Schema({
  name: String,
  email: String,
  phone: String,
  subject: String,
  message: String
});

const Message = mongoose.model('Message', messageSchema);

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

// ุฌุนู ูุฌูุฏ "public" ูุชุงุญูุง ููุณูุฑูุฑ
app.use(express.static(path.join(__dirname, 'public')));

// ุงุณุชูุจุงู ุจูุงูุงุช ุงููููุฐุฌ ูุญูุธูุง ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
app.post('/contact', async (req, res) => {
  try {
    const newMessage = new Message(req.body);
    await newMessage.save();
    console.log("โ ุชู ุญูุธ ุงูุฑุณุงูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:", req.body);
    res.json({ success: true, message: 'ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุจูุฌุงุญ!' });
  } catch (error) {
    console.error("โ ุฎุทุฃ ุฃุซูุงุก ุญูุธ ุงูุจูุงูุงุช:", error);
    res.status(500).json({ success: false, message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุฅุฑุณุงู.' });
  }
});

app.listen(PORT, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ูุนูู ุนูู http://localhost:${PORT}`);
});
console.log("MONGO_URI:", process.env.MONGO_URI);
